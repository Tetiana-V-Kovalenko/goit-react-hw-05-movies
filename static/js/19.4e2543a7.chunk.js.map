{"version":3,"file":"static/js/19.4e2543a7.chunk.js","mappings":"qSAAaA,EAAiB,mCAAG,oGACRC,MACrB,6FACAC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHgB,cACzBD,EADyB,yBAKxBA,EAASE,SALe,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,MAAM,sCAAD,OACYM,EADZ,6DAE1BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHW,cACpBD,EADoB,yBAInBA,GAJmB,2CAAH,sDAMZK,EAAe,mCAAG,WAAMD,GAAN,uFACNN,MAAM,sCAAD,OACYM,EADZ,4EAE1BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHc,cACvBD,EADuB,yBAItBA,EAASE,SAJa,2CAAH,sDAMfI,EAAY,mCAAG,WAAMF,GAAN,uFACHN,MAAM,sCAAD,OACYM,EADZ,4EAE1BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHW,cACpBD,EADoB,yBAInBA,EAASO,MAJU,2CAAH,sDAMZC,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,MAAM,kHAAD,OACwFW,IAClHV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAHgB,cACzBD,EADyB,yBAIxBA,EAASE,SAJe,2CAAH,qD,6ECI9B,UAzBgB,WACd,IAAQE,GAAOM,EAAAA,EAAAA,MAAPN,GAER,GAA8BO,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAgBD,GAAIL,KAAKc,EAC1B,GAAE,CAACT,KAEF,yBACGQ,IACEA,EAAQG,OAAS,GAChB,wBACGH,EAAQI,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOb,GADC,OAQrB,sEAIT,C,sBC5BD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO9B,KAAKyB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["MoviDbAPI/MovieDbApi.js","components/MovieDetails/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getTrendingMovies = async () => {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=542eb136f2935291d264064efe348750'\n  ).then(response => response.json());\n\n  return response.results;\n};\nexport const getMovieById = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=542eb136f2935291d264064efe348750&language=en-US`\n  ).then(response => response.json());\n  return response;\n};\nexport const getMovieReviews = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=542eb136f2935291d264064efe348750&language=en-US&page=1`\n  ).then(response => response.json());\n  return response.results;\n};\nexport const getMovieCast = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=542eb136f2935291d264064efe348750&language=en-US&page=1`\n  ).then(response => response.json());\n  return response.cast;\n};\nexport const getSearchedMovies = async query => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=542eb136f2935291d264064efe348750&language=en-US&page=1&query=${query}`\n  ).then(response => response.json());\n  return response.results;\n};\n","import { getMovieReviews } from 'MoviDbAPI/MovieDbApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    getMovieReviews(id).then(setReviews);\n  }, [id]);\n  return (\n    <div>\n      {reviews &&\n        (reviews.length > 0 ? (\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        ))}\n    </div>\n  );\n};\nexport default Reviews;\nReviews.propTypes = {\n  state: PropTypes.object,\n  to: PropTypes.string,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrendingMovies","fetch","then","response","json","results","getMovieById","id","getMovieReviews","getMovieCast","cast","getSearchedMovies","query","useParams","useState","reviews","setReviews","useEffect","length","map","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}